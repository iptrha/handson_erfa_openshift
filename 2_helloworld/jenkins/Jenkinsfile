try {
     timeout(time: 20, unit: 'MINUTES') {
        def project=""
        node {
          stage("Initialize") {
            project = env.PROJECT_NAME
            echo "using project " + project
          }
        }
        node("maven") {
          stage("Checkout") {
            git url: "https://github.com/iptrha/handson_erfa_openshift.git", branch: "master"
          }

          stage ( "Build" ) {
            sh "oc apply -f 2_helloworld/openshift/imagestream.yml"
            sh "oc apply -f 2_helloworld/openshift/buildconfig.yml"

            openshiftBuild bldCfg: 'helloworld'
          }

          stage ( "Deploy to DEVL" )
          {
              // create deploymentconfig, route and service from template for devl stage
              sh "oc process -f 2_helloworld/openshift/application-template.yml STAGE=devl PROJECT_NAME=" + project + " | oc apply -f -"

              // Deploy and verify deployment
              openshiftDeploy depCfg: 'helloworld-devl'
              openshiftVerifyDeployment depCfg: 'helloworld-devl'

              // do a very simple smoketest
              sh "curl -vk http://helloworld-devl-rha-example.apps.devocp.netcloud.cloud"

          }

          stage ( "Deploy to TEST" )
          {
              // create deploymentconfig, route and service from template for test stage
              sh "oc process -f 2_helloworld/openshift/application-template.yml STAGE=test | oc apply -f -"

              // we have to set the docker image after the fact because otherwise it's dependent on the project name
              sh "oc set image dc/helloworld-test helloworld-test=helloworld:latest --source=istag"

              // Deploy and verify deployment
              openshiftDeploy depCfg: 'helloworld-test'
              openshiftVerifyDeployment depCfg: 'helloworld-test'

              // do a very simple smoketest
              sh "curl -vk http://helloworld-test-rha-example.apps.devocp.netcloud.cloud"
          }

          stage ( "Deploy to PROD" )
          {
              // create deploymentconfig, route and service from template for prod stage
              sh "oc process -f 2_helloworld/openshift/application-template.yml STAGE=prod | oc apply -f -"

              // we have to set the docker image after the fact because otherwise it's dependent on the project name
              sh "oc set image dc/helloworld-prod helloworld-prod=helloworld:latest --source=istag"

              // Deploy and verify deployment
              openshiftDeploy depCfg: 'helloworld-prod'
              openshiftVerifyDeployment depCfg: 'helloworld-prod'

              // do a very simple smoketest
              sh "curl -vk http://helloworld-prod-rha-example.apps.devocp.netcloud.cloud"
          }
        }
     }
  } catch (err) {
     echo "in catch block"
     echo "Caught: ${err}"
     currentBuild.result = 'FAILURE'
     throw err
  }
